set-option -g default-shell /bin/zsh
set-option -g default-command /bin/zsh
set-option -s escape-time 0

set-option -g prefix C-space
bind-key C-space send-prefix
unbind-key C-b

set-option -g allow-rename off

# System window by supported OS
set-option -g set-titles on
set-option -g set-titles-string "[tmux] #T @ #H"

# Enable clipboard
set-option -g default-command \
'which reattach-to-user-namespace >/dev/null 2>&1 && \
reattach-to-user-namespace -l zsh || zsh'

# Display time
set-option -g display-time 3500

# Operations
# Switch clients
bind-key N switch-client -n
bind-key P switch-client -p

## Window

# Start window index 1 origin
set-option -g base-index 1

# Split window
bind-key | split-window -h

# Vertical split window
bind-key - split-window -v

# Change active window
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

## Pane

# Start pane index 1 origin
set-window-option -g pane-base-index 1

# Resize pane
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

# Change active pane
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Rotate active pane
bind-key -n C-o run "tmux select-pane -l || tmux select-pane -t :.+"

# Break or kill pane
bind-key b break-pane
bind-key q kill-pane
bind-key C-q kill-session
bind-key C-x run "tmux kill-pane || tmux kill-window"
bind-key C-t run "tmux last-pane || tmux last-window || tmux new-window"

# Display pane
bind-key i display-panes

# Key-bindings

# Reload config file
bind-key r source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"
bind-key C-r source-file ~/.tmux.conf\; display-message "[tmux] $HOME/.tmux.conf reloaded!"

# Look up in a web dictionary
bind-key g command-prompt -p "Google Translate en->de:" "split-window 'source ~/.zshrc >/dev/null; gte %% | less'"
bind-key G command-prompt -p "Google Translate de->en:" "split-window 'source ~/.zshrc >/dev/null; gtj %% | less'"

# Look up in a man-page
bind-key m command-prompt -p "Man:" "split-window 'man %%'"
# Less some files with syntax highlight
bind-key M command-prompt -p "Less:" "split-window 'which richpager && richpager -l %%'"

# Appearance
set-option -g status-position top

set-option -g default-terminal "screen-256color"
set-option -g pane-active-border-bg colour235

## Customize statusline

# Length left
set-option -g status-left-length 90
set-option -g status-right-length 90

# Contents left
#set-option -g status-left '#H:[#P]'
set-option -g status-left 'tmux:[#P]'

# Contents right
set-option -g status-right "#(tmux show-options -g prefix) [%Y-%m-%d(%a) %H:%M]"

set-option -g status-right '#[fg=white]#(wifi)#[default] #(battery --tmux) [%Y-%m-%d(%a) %H:%M]'

# Reload statusbar
set-option -g status-interval 1

# Centerize
set-option -g status-justify centre

# Enable visual notification
set-window-option -g monitor-activity on

# Enable visual notification
set-option -g visual-activity on

# Enable statusbar top
set-option -g status-position top

## Colorscheme: Solarized

# Default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# Default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# Active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
set-window-option -g window-status-current-attr bright

# Pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# Message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# Pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# Clock
set-window-option -g clock-mode-colour colour64 #green

# Mouse Scrolling
set-option -g mouse on

# Copy-mode
set-window-option -g mode-keys vi

bind-key v copy-mode \; display "Copy mode!"
bind-key C-v copy-mode \; display "Copy mode!"
bind-key C-t copy-mode \; display "Copy mode!"

bind-key p paste-buffer
# Make pbcopy/pbpaste and Vim's * register work.
set-option -g default-command "reattach-to-user-namespace -l zsh"

bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"
unbind-key -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"


bind-key -t vi-copy Escape clear-selection
bind-key -t vi-copy C-c cancel
bind-key -t vi-copy C-v rectangle-toggle
bind-key -t vi-copy C-a start-of-line
bind-key -t vi-copy C-e end-of-line
bind-key -t vi-copy w next-word
bind-key -t vi-copy e next-word-end
bind-key -t vi-copy b previous-word
bind-key -t vi-copy g top-line
bind-key -t vi-copy G bottom-line
bind-key -t vi-copy / search-forward
bind-key -t vi-copy ? search-backward
bind-key -t vi-copy C-n page-up
bind-key -t vi-copy C-f page-down
bind-key -t vi-copy C-u scroll-up
bind-key -t vi-copy C-d scroll-down

unbind-key Space
bind-key -t vi-copy V select-line

# vim:fdm=marker expandtab fdc=3 ft=tmux ts=2 sw=2 sts=2:

#
# Tmux terminal multiplexer
#

# {{{ Tmux manual
#
# Tmux manpage
# https://man.openbsd.org/OpenBSD-current/man1/tmux.
#
# Tmux cheatsheet
# https://gist.github.com/MohamedAlaa/2961058
#
# }}}

# {{{ General options

set -g default-terminal "tmux-256color"
set -g default-command $SHELL

# Remap PREFIX to "Ctrl-Space"
unbind C-b
set -g prefix C-space
bind C-space send-prefix

# Neovim https://github.com/neovim/neovim/wiki/FAQ#esc-in-tmux-or-gnu-screen-is-delayed
set -sg escape-time 0
set -g focus-events on

# Set window and pane index to 1 (o is default)
set -g base-index 1
set -g pane-base-index 1

set -g automatic-rename on

# re-number windows when one is closed
set -g renumber-windows on

# set terminal title
set -g set-titles on

set -g set-titles-string '#h ❐ #S ● #I #W'

# tmux messages are displayed for 1.5 seconds
set -g display-time 150

# slightly longer pane indicators display time
set -g display-panes-time 800

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Status activity alerts (loud or quiet?)
set -g monitor-activity on
set -g visual-activity off
# set -g visual-bell off
# set -g bell-action none

# use vim keybindings in copy mode
setw -g mode-keys vi
setw -g other-pane-height 25
setw -g other-pane-width 80

# Direnv setup
# https://github.com/direnv/direnv/wiki/Tmux#alternatively
set-option -g update-environment "DIRENV_DIFF DIRENV_DIR DIRENV_WATCHES"
set-environment -gu DIRENV_DIFF
set-environment -gu DIRENV_DIR
set-environment -gu DIRENV_WATCHES
set-environment -gu DIRENV_LAYOUT

# Mouse enable
set -g mouse on

# }}}

# {{{ Smart pane awareness

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\ select-pane -l

# }}}

# {{{ Keybindings

# Make the current window the first window
bind-key T swap-window -t 1

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# Reload the tmux config
bind-key r source-file ~/.tmux.conf \; display-message "Reloaded!"

# Rename window
bind-key C-r command-prompt "rename-window '%%'"

# Join the last active pane to the currently active window
bind-key j join-pane -s !

# Move current window to session named "bg" (and create session if it does not exist)
bind-key B if-shell "! tmux has-session -t bg" "new-session -d -s bg" \; move-window -t bg

# Quick kill-session
bind-key C-q confirm-before 'kill-session'
# Disable confirm before killing
bind-key x kill-pane
bind-key : command-prompt
bind-key l choose-tree

# Pressing Ctrl+Shift+Left (will move the current window to the left. Similarly
# right. No need to use the modifier (C-b).
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind-key -n S-Right next-window
bind-key -n S-Left previous-window

# Splitting panes
bind-key | split-window -h
bind-key - split-window -v

# use vim-like keys for splits and windows
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

bind-key C-o rotate-window
bind-key C-l send-keys 'C-l'

unbind-key c
bind-key c new-window -ac '#{pane_current_path}'

# Layout
bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

bind-key tab select-pane -t :.*

# Moving between panes
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Quick pane selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing
bind-key -r H resize-pane -L 6
bind-key -r J resize-pane -R 6
bind-key -r K resize-pane -D 6
bind-key -r L resize-pane -U 6
bind-key -r S swap-pane -U

# Synchronize-panes toggle
bind C-s set-window-option synchronize-panes

# Vim copy & paste
# https://github.com/zanshin/dotfiles/blob/master/tmux/tmux.conf
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi V send-keys -X select-line
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind-key -T copy-mode-vi Escape send-keys -X cancel
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -ib"
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xsel -ib"

# Save entire tmux history to a file on the machine where tmux is running.
bind-key * command-prompt -p 'save history to filename:' -I '~/tmux.history' 'capture-pane -S -32768 ; save-buffer %1 ; delete-buffer'

bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# }}}

# {{{  Colors

# {{{ References

# Theme tomorrow-night:
# https://github.com/NickTomlin/dotfiles/blob/master/home/.tmux/tomorrow-night.tmux
# Modified from:
# https://github.com/connrs/dotfiles/blob/master/tmux/tomorrow-night.tmux
# Colorscheme:
# https://raw.github.com/ChrisKempson/Tomorrow-Theme/master/Images/Tomorrow-Night-Eighties-Palette.pn
# Colors tomorrow-night
# 2d2d2d Background
# 393939 Current Line
# 515151 Selection
# cccccc Foreground
# 999999 Comment
# f2777a Red
# f99157 Orange
# ffcc66 Yellow
# 99cc99 Green
# 66cccc Aqua
# 6699cc Blue
# cc99cc Purple

# }}}

## set status bar
set -g status-bg default

## highlight active window
setw -g window-status-current-bg "#282a2e"
setw -g window-status-current-fg "#81a2be"

## highlight activity in status bar
setw -g window-status-activity-fg "#8abeb7"
setw -g window-status-activity-bg "#1d1f21"

## pane border and colors
set -g pane-active-border-bg default
set -g pane-active-border-fg "#373b41"
set -g pane-border-bg default
set -g pane-border-fg "#373b41"

set -g clock-mode-colour "#81a2be"
set -g clock-mode-style 24

set -g message-bg "#8abeb7"
set -g message-fg "#000000"

set -g message-command-bg "#8abeb7"
set -g message-command-fg "#000000"

# message bar or "prompt"
set -g message-bg "#2d2d2d"
set -g message-fg "#cc99cc"

set -g mode-bg "#8abeb7"
set -g mode-fg "#000000"

# left side of status bar holds "(>- session name -<)"
set -g status-left-length 100
# set -g status-left-bg green
# set -g status-left-fg black
set -g status-left-attr bold
set -g status-left '#[fg=#cc99cc,bg=#2d2d2d] #H#[fg=]:#[fg=#99cc99]#S '

# right side of status bar holds "[host name] (date time)"
set -g status-right-length 100
set -g status-right-fg black
set -g status-right-attr bold
set -g status-right '#[fg=#f99157,bg=#2d2d2d] %H:%M |#[fg=#6699cc] %y.%m.%d '

# make background window look like white tab
set-window-option -g window-status-bg default
set-window-option -g window-status-fg white
set-window-option -g window-status-attr none
set-window-option -g window-status-format '#[fg=#6699cc,bg=colour235] #I #[fg=#999999,bg=#2d2d2d] #W #[default]'

# make foreground window look like bold yellow foreground tab
set-window-option -g window-status-current-attr none
set-window-option -g window-status-current-format '#[fg=#f99157,bg=#2d2d2d] #I #[fg=#cccccc,bg=#393939] #W #[default]'

# active terminal yellow border, non-active white
set -g pane-border-bg default
set -g pane-border-fg "#999999"
set -g pane-active-border-fg "#f99157"

# }}}

# {{{ Status bar

# Status update intervall
set -g status-interval 60


# Status bar left
set -g status-left-length 28
### status-left:  username@hostname:sessionname
set -g status-left "#[fg=blue]#(echo ${USER})#[fg=white]@#h#[fg=red]:#S#[fg=white] |"
### status-left: username:sessionname
# set -g status-left "#[fg=blue]#(echo ${USER})#[fg=red]:#S#[fg=white] |"

# Status bar right
### status-right: Date and Time
set -g status-right-length 16
set -g status-right '#[fg=darkgrey]%Y-%m-%d %H:%M'
### status-right: Time
#set -g status-right-length 6
#set -g status-right "#[fg=yellow]%H:%M"


# }}}

# {{{ Footer
# vim:fenc=utf-8:ft=tmux:ts=4:sts=4:sw=4:et:ai:ci:pi:fdm=marker:foldlevel=0:
# -*- mode: tmux -*-
# }}}

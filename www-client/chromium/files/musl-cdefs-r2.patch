diff --git chromium-75.0.3770.100/base/allocator/allocator_shim_internals.h chromium-75.0.3770.100/base/allocator/allocator_shim_internals.h
index 0196f89..bb42b5d 100644
--- chromium-75.0.3770.100/base/allocator/allocator_shim_internals.h
+++ chromium-75.0.3770.100/base/allocator/allocator_shim_internals.h
@@ -7,7 +7,9 @@
 
 #if defined(__GNUC__)
 
+#if defined(__GLIBC__)
 #include <sys/cdefs.h>  // for __THROW
+#endif
 
 #ifndef __THROW  // Not a glibc system
 #ifdef _NOEXCEPT  // LLVM libc++ uses noexcept instead
diff --git chromium-75.0.3770.100/sandbox/linux/suid/sandbox.c chromium-75.0.3770.100/sandbox/linux/suid/sandbox.c
index 854819b..39937e4 100644
--- chromium-75.0.3770.100/sandbox/linux/suid/sandbox.c
+++ chromium-75.0.3770.100/sandbox/linux/suid/sandbox.c
@@ -44,7 +44,16 @@
 
 static bool DropRoot();
 
+#if defined(TEMP_FAILURE_RETRY)
 #define HANDLE_EINTR(x) TEMP_FAILURE_RETRY(x)
+#else
+#define HANDLE_EINTR(expression) \
+  (__extension__ \
+   ({ long __result; \
+    do __result = (long) (expression); \
+    while (__result == -1L && errno == EINTR); \
+    __result; }))
+#endif
 
 static void FatalError(const char* msg, ...)
     __attribute__((noreturn, format(printf, 1, 2)));
diff --git chromium-75.0.3770.100/third_party/crashpad/crashpad/compat/linux/sys/ptrace.h chromium-75.0.3770.100/third_party/crashpad/crashpad/compat/linux/sys/ptrace.h
index f8be372..c07e4c8 100644
--- chromium-75.0.3770.100/third_party/crashpad/crashpad/compat/linux/sys/ptrace.h
+++ chromium-75.0.3770.100/third_party/crashpad/crashpad/compat/linux/sys/ptrace.h
@@ -17,8 +17,6 @@
 
 #include_next <sys/ptrace.h>
 
-#include <sys/cdefs.h>
-
 // https://sourceware.org/bugzilla/show_bug.cgi?id=22433
 #if !defined(PTRACE_GET_THREAD_AREA) && !defined(PT_GET_THREAD_AREA) && \
     defined(__GLIBC__)
diff --git chromium-69.0.3497.100/third_party/libsync/src/include/sync/sync.h
index 50ed0ac..7552a49 100644
--- chromium-69.0.3497.100/third_party/libsync/src/include/sync/sync.h
+++ chromium-69.0.3497.100/third_party/libsync/src/include/sync/sync.h
@@ -19,12 +19,13 @@
 #ifndef __SYS_CORE_SYNC_H
 #define __SYS_CORE_SYNC_H
 
-#include <sys/cdefs.h>
 #include <stdint.h>
 
 #include <linux/types.h>
 
-__BEGIN_DECLS
+#ifdef __cplusplus
+extern "C" {
+#endif /* __cplusplus */
 
 struct sync_legacy_merge_data {
  int32_t fd2;
@@ -158,6 +159,8 @@ struct sync_pt_info *sync_pt_info(struct sync_fence_info_data *info,
                                   struct sync_pt_info *itr);
 void sync_fence_info_free(struct sync_fence_info_data *info);
 
-__END_DECLS
+#ifdef __cplusplus
+}
+#endif /* __cplusplus */
 
 #endif /* __SYS_CORE_SYNC_H */

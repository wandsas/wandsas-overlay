description: disable dependencies on third_party/perfetto
author: Michael Gilbert <mgilbert@debian.org>

--- a/BUILD.gn
+++ b/BUILD.gn
@@ -659,7 +659,7 @@ group("gn_all") {
     }
   }
 
-  if (is_mac || is_linux || is_android) {
+  if (false) {
     deps += [ "//third_party/perfetto:all" ]
   }
 
--- a/services/tracing/BUILD.gn
+++ b/services/tracing/BUILD.gn
@@ -28,7 +28,7 @@ source_set("lib") {
     "//services/tracing/public/cpp",
   ]
 
-  if (is_mac || is_linux || is_android) {
+  if (false) {
     sources += [
       "perfetto/json_trace_exporter.cc",
       "perfetto/json_trace_exporter.h",
@@ -99,7 +99,7 @@ source_set("tests") {
     "//testing/gtest",
   ]
 
-  if (is_mac || is_linux || is_android) {
+  if (false) {
     sources += [
       "perfetto/json_trace_exporter_unittest.cc",
       "perfetto/perfetto_integration_unittest.cc",
--- a/services/tracing/public/cpp/BUILD.gn
+++ b/services/tracing/public/cpp/BUILD.gn
@@ -22,7 +22,7 @@ component("cpp") {
     "//services/tracing/public/mojom",
   ]
 
-  if (is_mac || is_linux || is_android) {
+  if (false) {
     sources += [
       "perfetto/producer_client.cc",
       "perfetto/producer_client.h",
--- a/services/tracing/tracing_service.cc
+++ b/services/tracing/tracing_service.cc
@@ -12,7 +12,7 @@
 #include "services/tracing/coordinator.h"
 #include "services/tracing/public/cpp/tracing_features.h"
 
-#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_MACOSX)
+#if 0
 #include "services/tracing/perfetto/perfetto_service.h"
 #include "services/tracing/perfetto/perfetto_tracing_coordinator.h"
 #endif
@@ -26,7 +26,7 @@ std::unique_ptr<service_manager::Service
 TracingService::TracingService() : weak_factory_(this) {}
 
 TracingService::~TracingService() {
-#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_MACOSX)
+#if 0
   if (perfetto_tracing_coordinator_) {
     PerfettoTracingCoordinator::DestroyOnSequence(
         std::move(perfetto_tracing_coordinator_));
@@ -48,7 +48,7 @@ void TracingService::OnStart() {
                           base::Unretained(tracing_agent_registry_.get())));
 
   if (TracingUsesPerfettoBackend()) {
-#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_MACOSX)
+#if 0
     perfetto_service_ = std::make_unique<tracing::PerfettoService>();
     registry_.AddInterface(
         base::BindRepeating(&tracing::PerfettoService::BindRequest,
--- a/services/tracing/tracing_service.h
+++ b/services/tracing/tracing_service.h
@@ -50,7 +50,7 @@ class TracingService : public service_ma
   std::unique_ptr<Coordinator> tracing_coordinator_;
   std::unique_ptr<service_manager::ServiceContextRefFactory> ref_factory_;
 
-#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_MACOSX)
+#if 0
   std::unique_ptr<tracing::PerfettoService> perfetto_service_;
   std::unique_ptr<PerfettoTracingCoordinator> perfetto_tracing_coordinator_;
 #endif
--- a/services/tracing/public/cpp/trace_event_agent.cc
+++ b/services/tracing/public/cpp/trace_event_agent.cc
@@ -21,7 +21,7 @@
 #include "services/tracing/public/cpp/tracing_features.h"
 #include "services/tracing/public/mojom/constants.mojom.h"
 
-#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_MACOSX)
+#if 0
 #include "services/tracing/public/cpp/perfetto/producer_client.h"
 #endif
 
@@ -33,7 +33,7 @@ const char kTraceEventLabel[] = "traceEv
 
 namespace tracing {
 
-#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_MACOSX)
+#if 0
 class PerfettoTraceEventAgent : public TraceEventAgent {
  public:
   explicit PerfettoTraceEventAgent(service_manager::Connector* connector) {
@@ -65,7 +65,7 @@ std::unique_ptr<TraceEventAgent> TraceEv
     service_manager::Connector* connector,
     bool request_clock_sync_marker_on_android) {
   if (TracingUsesPerfettoBackend()) {
-#if defined(OS_ANDROID) || defined(OS_LINUX) || defined(OS_MACOSX)
+#if 0
     return std::make_unique<PerfettoTraceEventAgent>(connector);
 #else
     LOG(FATAL) << "Perfetto is not yet available for this platform.";
